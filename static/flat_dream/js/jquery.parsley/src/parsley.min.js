define(["parsley/utils","parsley/defaults","parsley/abstract","parsley/validator","parsley/ui","parsley/factory/options","parsley/form","parsley/field","parsley/multiple","parsley/pubsub","i18n/en"],function(e,i,b,g,f,j,c,d,a){var h=function(m,l,k){this.__class__="Parsley";this.__version__="@@version";this.__id__=e.hash(4);if("undefined"===typeof m){throw new Error("You must give an element")}if("undefined"!==typeof k&&"ParsleyForm"!==k.__class__){throw new Error("Parent instance must be a ParsleyForm instance")}return this.init($(m),l,k)};h.prototype={init:function(l,m,k){if(!l.length){throw new Error("You must bind Parsley on an existing element.")}this.$element=l;if(this.$element.data("Parsley")){var n=this.$element.data("Parsley");if("undefined"!==typeof k){n.parent=k}return n}this.OptionsFactory=new j(i,e.get(window,"ParsleyConfig")||{},m,this.getNamespace(m));this.options=this.OptionsFactory.get(this);if(this.$element.is("form")||(e.attr(this.$element,this.options.namespace,"validate")&&!this.$element.is(this.options.inputs))){return this.bind("parsleyForm")}else{if(this.$element.is(this.options.inputs)&&!this.$element.is(this.options.excluded)){return this.isMultiple()?this.handleMultiple(k):this.bind("parsleyField",k)}}return this},isMultiple:function(){return(this.$element.is("input[type=radio], input[type=checkbox]")&&"undefined"===typeof this.options.multiple)||(this.$element.is("select")&&"undefined"!==typeof this.$element.attr("multiple"))},handleMultiple:function(l){var o=this,m,k,p;this.options=$.extend(this.options,l?l.OptionsFactory.get(l):{},e.attr(this.$element,this.options.namespace));if(this.options.multiple){k=this.options.multiple}else{if("undefined"!==typeof this.$element.attr("name")&&this.$element.attr("name").length){k=m=this.$element.attr("name")}else{if("undefined"!==typeof this.$element.attr("id")&&this.$element.attr("id").length){k=this.$element.attr("id")}}}if(this.$element.is("select")&&"undefined"!==typeof this.$element.attr("multiple")){return this.bind("parsleyFieldMultiple",l,k||this.__id__)}else{if("undefined"===typeof k){if(window.console&&window.console.warn){window.console.warn("To be binded by Parsley, a radio, a checkbox and a multiple select input must have either a name or a multiple option.",this.$element)}return this}}k=k.replace(/(:|\.|\[|\]|\$)/g,"");if("undefined"!==typeof m){$('input[name="'+m+'"]').each(function(){if($(this).is("input[type=radio], input[type=checkbox]")){$(this).attr(o.options.namespace+"multiple",k)}})}if($("["+this.options.namespace+"multiple="+k+"]").length){for(var n=0;n<$("["+this.options.namespace+"multiple="+k+"]").length;n++){if("undefined"!==typeof $($("["+this.options.namespace+"multiple="+k+"]").get(n)).data("Parsley")){p=$($("["+this.options.namespace+"multiple="+k+"]").get(n)).data("Parsley");if(!this.$element.data("ParsleyFieldMultiple")){p.addElement(this.$element);this.$element.attr(this.options.namespace+"id",p.__id__)}break}}}this.bind("parsleyField",l,k,true);return p||this.bind("parsleyFieldMultiple",l,k)},getNamespace:function(k){if("undefined"!==typeof this.$element.data("parsleyNamespace")){return this.$element.data("parsleyNamespace")}if("undefined"!==typeof e.get(k,"namespace")){return k.namespace}if("undefined"!==typeof e.get(window,"ParsleyConfig.namespace")){return window.ParsleyConfig.namespace}return i.namespace},bind:function(m,l,k,o){var n;switch(m){case"parsleyForm":n=$.extend(new c(this.$element,this.OptionsFactory),new b(),window.ParsleyExtend)._bindFields();break;case"parsleyField":n=$.extend(new d(this.$element,this.OptionsFactory,l),new b(),window.ParsleyExtend);break;case"parsleyFieldMultiple":n=$.extend(new d(this.$element,this.OptionsFactory,l),new b(),new a(),window.ParsleyExtend)._init(k);break;default:throw new Error(m+"is not a supported Parsley type")}if("undefined"!==typeof k){e.setAttr(this.$element,this.options.namespace,"multiple",k)}if("undefined"!==typeof o){this.$element.data("ParsleyFieldMultiple",n);return n}if(new RegExp("ParsleyF","i").test(n.__class__)){this.$element.data("Parsley",n);$.emit("parsley:"+("parsleyForm"===m?"form":"field")+":init",n)}return n}};$.fn.parsley=$.fn.psly=function(k){if(this.length>1){var l=[];this.each(function(){l.push($(this).parsley(k))});return l}if(!$(this).length){if(window.console&&window.console.warn){window.console.warn("You must bind Parsley on an existing element.")}return}return new h(this,k)};window.ParsleyUI="function"===typeof e.get(window,"ParsleyConfig.ParsleyUI")?new window.ParsleyConfig.ParsleyUI().listen():new f().listen();if("undefined"===typeof window.ParsleyExtend){window.ParsleyExtend={}}if("undefined"===typeof window.ParsleyConfig){window.ParsleyConfig={}}window.Parsley=window.psly=h;window.ParsleyUtils=e;window.ParsleyValidator=new g(window.ParsleyConfig.validators,window.ParsleyConfig.i18n);if(false!==e.get(window,"ParsleyConfig.autoBind")){$(document).ready(function(){if($("[data-parsley-validate]").length){$("[data-parsley-validate]").parsley()}})}return h});