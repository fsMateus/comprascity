module.exports=function(a){a.loadNpmTasks("grunt-replace");a.loadNpmTasks("grunt-bower-cli");a.loadNpmTasks("grunt-contrib-clean");a.loadNpmTasks("grunt-contrib-uglify");a.loadNpmTasks("grunt-contrib-requirejs");a.loadNpmTasks("grunt-contrib-watch");a.loadNpmTasks("grunt-contrib-concat");a.loadNpmTasks("grunt-npm2bower-sync");a.loadNpmTasks("grunt-docco");a.initConfig({pkg:a.file.readJSON("package.json"),clean:{dist:["./dist"]},sync:{all:{options:{sync:["author","name","version","license","main","keywords"],from:"package.json",to:"bower.json"}}},docco:{source:{src:["src/parsley.js","src/parsley/*.js","src/extra/plugin/remote.js"],options:{output:"doc/annotated-source/",layout:"parallel"}}},replace:{annotated:{options:{patterns:[{match:/<div id="jump_page">/ig,replacement:function(){return'<div id="jump_page"><a class="source" href="../index.html"><<< back to documentation</a>'}},{match:/<\/body>/ig,replacement:function(){return'<script type="text/javascript">var _gaq=_gaq||[];_gaq.push(["_setAccount","UA-37229467-1"]);_gaq.push(["_trackPageview"]);(function(){var e=document.createElement("script");e.type="text/javascript";e.async=true;e.src=("https:"==document.location.protocol?"https://ssl":"http://www")+".google-analytics.com/ga.js";var t=document.getElementsByTagName("script")[0];t.parentNode.insertBefore(e,t)})();<\/script></body>'}},{match:"version",replacement:"<%= pkg.version %>"}]},files:[{expand:true,flatten:true,src:"doc/annotated-source/*.html",dest:"doc/annotated-source/"}]},dist:{options:{patterns:[{match:"name",replacement:"<%= pkg.name.charAt(0).toUpperCase() + pkg.name.slice(1) %>"},{match:"version",replacement:"<%= pkg.version %>"},{match:"author",replacement:"<%= pkg.author.name %> - <<%= pkg.author.email %>>"},{match:"timestamp",replacement:"<%= grunt.template.today() %>"},{match:"license",replacement:"<%= pkg.license %>"},{match:/define\("((?!\);)[\s\S])*\);/ig,replacement:function(){return""}},{match:/\n\n/ig,replacement:function(){return"\n"}}]},files:[{expand:true,flatten:true,src:"dist/parsley.js",dest:"dist/"}]}},requirejs:{compile:{options:{name:"parsley",mainConfigFile:"./src/config.js",wrap:{startFile:"src/wrap/prepend.js",endFile:"src/wrap/append.js"},optimize:"none",out:"dist/parsley.js",findNestedDependencies:true,skipSemiColonInsertion:true,onBuildWrite:convert}}},uglify:{options:{report:"gzip",preserveComments:function(c,b){return new RegExp("^!").test(b.value)&&RegExp("parsley","i").test(b.value)}},min:{files:{"dist/parsley.min.js":"dist/parsley.js"}},remote:{files:{"dist/parsley.remote.min.js":"dist/parsley.remote.js"}}},watch:{dev:{files:["src/parsley.js","src/parsley.css","src/wrap/*.js","src/parsley/*.js"],tasks:["requirejs","replace:dist"]}},concat:{remote:{src:["src/extra/plugin/remote.js","dist/parsley.js"],dest:"dist/parsley.remote.js"}}});a.registerTask("default",[]);a.registerTask("configure",["bower:install"]);a.registerTask("build",["configure","requirejs","replace:dist","uglify:min"]);a.registerTask("build-remote",["concat:remote","uglify:remote"]);a.registerTask("build-annotated-source",["docco:source","replace:annotated"]);a.registerTask("build-all",["clean:dist","build","build-remote","build-annotated-source","sync"])};var rdefineEnd=/\}\);[^}\w]*$/;function convert(a,c,b){if(/(defaults|utils)/.test(c)){a=(/parsley\/([\w-]+)/.exec(a)[1]);return b.replace(/define\([\w\W]*?return/,"  var Parsley"+a.charAt(0).toUpperCase()+a.slice(1)+" =").replace(rdefineEnd,"")}if(/(dist\/validator.js)/.test(c)){return b}b=b.replace(/\s*return\s+[^\}]+(\}\);[^\w\}]*)$/,"$1").replace(/\s*exports\.\w+\s*=\s*\w+;/g,"");b=b.replace(/define\([^{]*?{/,"").replace(rdefineEnd,"\n");return b};