define(function(){return function(a,b){describe("ParsleyForm",function(){it("should be a function",function(){expect(a).to.be.a("function")});it("should throw an error if no element given",function(){expect(a).to.throwException()});it("should bind parsleyFields children",function(){$("body").append('<form id="element"><input id="field1" type="text"/><div id="field2"></div><textarea id="field2"></textarea></form>');var c=new b($("#element"));expect(c.fields.length).to.be(2)});it("should bind parsleyFields children, and not excluded ones",function(){$("body").append('<form id="element"><input id="field1" type="text"/><div id="field2"></div><textarea id="field2"></textarea><div data-parsley-validate></div><input id="field3" disabled /><input type="submit"/></form>');var c=new b($("#element"),{excluded:"[disabled], input[type=button], input[type=submit], input[type=reset]"});expect(c.fields.length).to.be(2)});it("should properly bind options for form and children fields",function(){$("body").append('<form id="element" data-parsley-trigger="change"><input id="field1" type="text" data-parsley-required="true" /><div id="field2"></div><textarea id="field3" data-parsley-notblank="true"></textarea></form>');var c=new b($("#element"));expect(c.fields.length).to.be(2);expect(new b("#field1").options.trigger).to.be("change");expect(new b("#field1").options).to.have.key("required");expect(new b("#field1").options).to.not.have.key("notblank");expect(new b("#field3").options).to.have.key("notblank");expect(new b("#field3").options).to.not.have.key("required")});it("should properly store validation state after `validate()`",function(){$("body").append('<form id="element" data-parsley-trigger="change"><input id="field1" type="text" data-parsley-required="true" /><div id="field2"></div><textarea id="field3" data-parsley-notblank="true"></textarea></form>');var c=new b($("#element"));c.validate();expect(c.validationResult).to.be(false);$("#field1").val("foo");$("#field3").val("foo");expect(c.validate()).to.be(true)});it("should handle group validation",function(){$("body").append('<form id="element"><input id="field1" type="text" data-parsley-group="foo" data-parsley-required="true" /><div id="field2"></div><textarea id="field3" data-parsley-group="bar" data-parsley-required="true"></textarea></form>');var c=new b($("#element"));expect(c.isValid()).to.be(false);$("#field1").val("value");expect(c.isValid()).to.be(false);expect(c.isValid("foo")).to.be(true);expect(c.isValid("bar")).to.be(false)});it("should handle `onFormSubmit` validation",function(){$("body").append('<form id="element" data-parsley-trigger="change"><input id="field1" type="text" data-parsley-required="true" /><div id="field2"></div><textarea id="field3" data-parsley-notblank="true"></textarea></form>');var c=new b($("#element"));c.subscribe("parsley:form:validate",function(e){if(e.asyncSupport){e.submitEvent._originalPreventDefault()}});var d=$.Event();d._originalPreventDefault=d.preventDefault;d.preventDefault=sinon.spy();c.onSubmitValidate(d);expect(d.preventDefault.called).to.be(true);$("#field1").val("foo");$("#field3").val("foo");d=$.Event();d._originalPreventDefault=d.preventDefault;d.preventDefault=sinon.spy();c.onSubmitValidate(d);if(!c.asyncSupport){expect(d.preventDefault.called).to.be(false)}else{expect(d.preventDefault.called).to.be(true)}});it("should have a force option for validate and isValid methods",function(){$("body").append('<form id="element"><input id="field1" type="email" /><input id="field3" data-parsley-notblank="true" /></form>');expect($("#element").parsley().isValid()).to.be(true);expect($("#element").parsley().isValid(undefined,true)).to.be(false);expect($("#element").parsley().validate()).to.be(true);expect($("#element").parsley().validate(undefined,true)).to.be(false)});it("should properly bind dynamically added fields",function(){$("body").append('<form id="element" data-parsley-trigger="change"></form>');$("#element").append('<input type="email" id="email" required />');var c=$("#email").psly();expect(c.__class__).to.be("ParsleyField");var d=$("#element").psly();expect(d.fields[0].$element.attr("id")).to.be("email");expect(c.parent.__class__).to.be("ParsleyForm")});it("should stop event propagation on form submit",function(c){$("body").append('<form id="element"><input type="text" required/></form>');var d=$("#element").parsley();$("#element").on("submit",function(){expect(true).to.be(false)});d.subscribe("parsley:form:validated",function(){c()});$("#element").submit()});afterEach(function(){if($("#element").length){$("#element").remove()}})})}});