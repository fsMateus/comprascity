define("features/extra",["extra/validator/dateiso"],function(){return function(a){describe("ParsleyExtras validators",function(){it("should have dateiso validator",function(){expect(window.ParsleyConfig.validators).to.have.key("dateiso");var b=new a(window.ParsleyConfig.validators);expect(b.validate("",b.validators.dateiso())).not.to.be(true);expect(b.validate("foo",b.validators.dateiso())).not.to.be(true);expect(b.validate("1986-30-01",b.validators.dateiso())).not.to.be(true);expect(b.validate("1986-12-45",b.validators.dateiso())).not.to.be(true);expect(b.validate("1986-12-01",b.validators.dateiso())).to.be(true)});it("should have a bind.js plugin allowing to give pure json validation config to parsley constructor",function(b){require(["extra/plugin/bind"],function(){$("body").append('<form id="element" ><input type="text" name="name" /><input type="text" name="email" id="email" /><input type="checkbox" name="sexe" id="sexe" value="male" /><input type="checkbox" name="sexe" value="female" /></form>');var c=$("#element").parsley({fields:{'[name="name"]':{required:true,length:[4,20]},"#email":{type:"email"},"#sexe":{required:true}}});expect($('[name="name"]').parsley().constraints.length).to.be(2);expect($("#email").parsley().constraints.length).to.be(1);expect($("#sexe").parsley().constraints.length).to.be(1);expect($("#sexe").parsley().constraints[0].name).to.be("required");b()})});afterEach(function(){if($("#element").length){$("#element").remove()}if($(".parsley-errors-list").length){$(".parsley-errors-list").remove()}})})}});