define(function(){return function(a){describe("ParsleyValidator",function(){var b=new a(window.ParsleyConfig.validators||{},window.ParsleyConfig.i18n||{});it("should be a function",function(){expect(a).to.be.a("function")});it("should bind global config validators if given in constructor",function(){window.ParsleyConfig={i18n:window.ParsleyConfig.i18n,validators:$.extend(window.ParsleyConfig.validators,{foo:{fn:function(){},priority:42},bar:{fn:function(){},priority:12}})};var c=new a(window.ParsleyConfig.validators);expect(c.validators).to.have.key("foo");expect(c.validators).to.have.key("bar");delete window.ParsleyConfig.validators.foo;delete window.ParsleyConfig.validators.bar});it("should have a required validator",function(){expect(b.validate("",b.validators.required())).not.to.be(true);expect(b.validate("foo",b.validators.required())).to.be(true)});it("should have a notblank validator",function(){expect(b.validate(" ",b.validators.notblank())).not.to.be(true);expect(b.validate("foo",b.validators.notblank())).to.be(true)});it('should have a type="email" validator',function(){expect(b.validate("",b.validators.type("email"))).not.to.be(true);expect(b.validate("foo",b.validators.type("email"))).not.to.be(true);expect(b.validate("foo@bar.baz",b.validators.type("email"))).to.be(true);expect(b.validate("foo+bar@bar.baz",b.validators.type("email"))).to.be(true);expect(b.validate("foo.bar@bar.baz",b.validators.type("email"))).to.be(true);expect(b.validate("foo.bar@bar.com.ext",b.validators.type("email"))).to.be(true)});it("should have a min validator",function(){expect(b.validate("",b.validators.min(6))).not.to.be(true);expect(b.validate("foo",b.validators.min(6))).not.to.be(true);expect(b.validate("1",b.validators.min(6))).not.to.be(true);expect(b.validate("6",b.validators.min(6))).to.be(true);expect(b.validate("10",b.validators.min(6))).to.be(true);$("body").append('<input type="text" id="element" value="7" min="2" />');expect($("#element").parsley().isValid()).to.be(true)});it("should have a max validator",function(){expect(b.validate("",b.validators.max(10))).not.to.be(true);expect(b.validate("foo",b.validators.max(10))).not.to.be(true);expect(b.validate("1",b.validators.max(10))).to.be(true);expect(b.validate("1",b.validators.max("10"))).to.be(true);expect(b.validate("10",b.validators.max(10))).to.be(true);expect(b.validate("17",b.validators.max(10))).not.to.be(true);$("body").append('<input type="text" id="element" value="7" max="20" />');expect($("#element").parsley().isValid()).to.be(true)});it("should have a range validator",function(){expect(b.validate("1",b.validators.range([5,10]))).not.to.be(true);expect(b.validate("7",b.validators.range([5,10]))).to.be(true);expect(b.validate("17",b.validators.range([5,10]))).not.to.be(true);$("body").append('<input type="text" id="element" value="7" max="20" min="2" />');expect($("#element").parsley().isValid()).to.be(true)});it('should have a type="number" validator',function(){expect(b.validate("foo",b.validators.type("number"))).not.to.be(true);expect(b.validate("1",b.validators.type("number"))).to.be(true);expect(b.validate("1.5",b.validators.type("number"))).to.be(true);expect(b.validate("-1.5",b.validators.type("number"))).to.be(true);expect(b.validate("1,500.642",b.validators.type("number"))).to.be(true)});it('should have a type="digits" validator',function(){expect(b.validate("foo",b.validators.type("digits"))).not.to.be(true);expect(b.validate("1",b.validators.type("digits"))).to.be(true);expect(b.validate("-1",b.validators.type("digits"))).not.to.be(true);expect(b.validate("1.5",b.validators.type("digits"))).not.to.be(true);expect(b.validate("-1.5",b.validators.type("digits"))).not.to.be(true);expect(b.validate("1,500.642",b.validators.type("digits"))).not.to.be(true)});it('should have a type="integer" validator',function(){expect(b.validate("foo",b.validators.type("integer"))).not.to.be(true);expect(b.validate("1",b.validators.type("integer"))).to.be(true);expect(b.validate("-1",b.validators.type("integer"))).to.be(true);expect(b.validate("1.5",b.validators.type("integer"))).not.to.be(true);expect(b.validate("-1.5",b.validators.type("integer"))).not.to.be(true)});it('should have a type="alphanum" validator',function(){expect(b.validate("foo",b.validators.type("alphanum"))).to.be(true);expect(b.validate("foo bar",b.validators.type("alphanum"))).not.to.be(true);expect(b.validate("foo$",b.validators.type("alphanum"))).not.to.be(true);$("body").append('<input type="alphanum" id="element" value="v4kRRyhYvo0P" />');expect($("#element").parsley().isValid()).to.be(true)});it('should have a type="url" validator',function(){expect(b.validate("foo",b.validators.type("url"))).not.to.be(true);expect(b.validate("foo bar",b.validators.type("url"))).not.to.be(true);expect(b.validate("http://",b.validators.type("url"))).not.to.be(true);expect(b.validate("foo.bar",b.validators.type("url"))).to.be(true);expect(b.validate("www.foo.bar",b.validators.type("url"))).to.be(true);expect(b.validate("http://www.foo.bar",b.validators.type("url"))).to.be(true);expect(b.validate("https://www.foo.bar",b.validators.type("url"))).to.be(true);expect(b.validate("https://www.foobarbaz.barbazbar.bazbar",b.validators.type("url"))).not.to.be(true)});it("should have a pattern validator",function(){expect(b.validate("a",b.validators.pattern("[a-z]+"))).to.be(true);expect(b.validate("A",b.validators.pattern("[a-z]+"))).not.to.be(true);expect(b.validate("a",b.validators.pattern("/[a-z]+/"))).to.be(true);expect(b.validate("A",b.validators.pattern("/[a-z]+/"))).not.to.be(true);expect(b.validate("a",b.validators.pattern("/[a-z]+/i"))).to.be(true);expect(b.validate("A",b.validators.pattern("/[a-z]+/i"))).to.be(true)});it("should have a length validator",function(){expect(b.validate("foobar",b.validators.length([3,9]))).to.be(true);expect(b.validate("foo",b.validators.length([4,9]))).not.to.be(true);expect(b.validate("foobarbaz",b.validators.length([3,8]))).not.to.be(true)});it("should have a minlength validator",function(){expect(b.validate("foo",b.validators.minlength(3))).to.be(true);expect(b.validate("fo",b.validators.minlength(3))).not.to.be(true);$("body").append('<input type="text" id="element" value="foo" minlength="2" />');expect($("#element").parsley().isValid()).to.be(true)});it("should have a maxlength validator",function(){expect(b.validate("foo",b.validators.maxlength(3))).to.be(true);expect(b.validate("foobar",b.validators.maxlength(3))).not.to.be(true);$("body").append('<input type="text" id="element" value="foo" maxlength="10" />');expect($("#element").parsley().isValid()).to.be(true)});it("should have a check validator",function(){expect(b.validate(["foo","bar","baz"],b.validators.check([3,5]))).to.be(true);expect(b.validate(["foo","bar","baz","qux","bux"],b.validators.check([3,4]))).not.to.be(true);expect(b.validate(["foo","bar"],b.validators.check([3,5]))).not.to.be(true)});it("should have a mincheck validator",function(){expect(b.validate(["foo","bar","baz"],b.validators.mincheck(3))).to.be(true);expect(b.validate(["foo","bar"],b.validators.mincheck(3))).not.to.be(true)});it("should have a maxcheck validator",function(){expect(b.validate(["foo","bar","baz"],b.validators.maxcheck(3))).to.be(true);expect(b.validate(["foo","bar","baz","qux"],b.validators.maxcheck(3))).not.to.be(true)});it("should have an equalto validator",function(){expect(b.validate("",b.validators.equalto("foo"))).not.to.be(true);expect(b.validate("bar",b.validators.equalto("foo"))).not.to.be(true);expect(b.validate("foo",b.validators.equalto("foo"))).to.be(true);$("body").append('<input type="text" id="element" data-parsley-equalto="#equalto" required /><input type="text" id="equalto" value="foo" />');expect($("#element").psly().isValid()).to.be(false);$("#element").val("fo");expect($("#element").psly().isValid()).to.be(false);$("#element").val("foo");expect($("#element").psly().isValid()).to.be(true);$("#equalto").remove()});it("should handle proper error message for validators",function(){expect(b.getErrorMessage({name:"length",requirements:[3,6]})).to.be("This value length is invalid. It should be between 3 and 6 characters long.");expect(b.getErrorMessage({name:"notexisting"})).to.be("This value seems to be invalid.")});it("should handle proper error message for validators in various languages",function(){b.setLocale("fr");expect(b.getErrorMessage({name:"length",requirements:[3,6]})).to.be("Cette valeur doit contenir entre 3 et 6 caract√®res.");expect(b.getErrorMessage({name:"notexisting"})).to.be("Cette valeur semble non valide.")});afterEach(function(){window.ParsleyConfig={i18n:window.ParsleyConfig.i18n,validators:window.ParsleyConfig.validators};if($("#element").length){$("#element").remove()}})})}});